"use strict";(globalThis["webpackChunkpb_site"]=globalThis["webpackChunkpb_site"]||[]).push([[993],{993:(e,t,i)=>{i.r(t),i.d(t,{default:()=>u});var a=i(1758),n=i(9104);function o(e,t,i,o,l,s){const c=(0,a.g2)("q-toolbar-title"),r=(0,a.g2)("q-card"),g=(0,a.g2)("q-tooltip"),d=(0,a.g2)("q-item"),h=(0,a.g2)("q-img");return(0,a.uX)(),(0,a.Wv)(r,{class:"page q-pa-md article"},{default:(0,a.k6)((()=>[(0,a.bF)(c,{class:"text-h4 text-bold q-pa-lg text-secondary text-bold"},{default:(0,a.k6)((()=>[(0,a.eW)("Game Development")])),_:1}),(0,a.bF)(r,{class:"paragraph text-body1"},{default:(0,a.k6)((()=>[(0,a.eW)(" I am currently diving into the fundamentals of game development, where I'm learning various essential concepts and techniques. This includes creating 3D models, implementing animations, and handling character movements and controls. I'm also working with collision detection, which ensures that game objects interact properly within the game world. A key part of this process involves animation state machines, which allow for efficient and flexible control of character animations based on different states and player actions. This foundation is crucial for building engaging, interactive game experiences. ")])),_:1}),(0,a.bF)(d,{clickable:"",tag:"a",target:"_blank",onClick:e.gifClicked,class:"button text-h6 text-info q-mt-lg"},{default:(0,a.k6)((()=>[(0,a.eW)(" Project Showcase "),e.gifShowing?((0,a.uX)(),(0,a.Wv)(g,{key:1},{default:(0,a.k6)((()=>[(0,a.eW)("click to hide")])),_:1})):((0,a.uX)(),(0,a.Wv)(g,{key:0},{default:(0,a.k6)((()=>[(0,a.eW)("click to view")])),_:1}))])),_:1},8,["onClick"]),(0,a.bF)(r,{class:"section"},{default:(0,a.k6)((()=>[(0,a.bo)((0,a.bF)(h,{class:"gif q-mt-lg q-pl-xl q-pr-xl",src:e.gifSrc,frameborder:"0"},null,8,["src"]),[[n.aG,e.gifShowing]])])),_:1})])),_:1})}const l=(0,a.pM)({name:"BP",components:{},data(){return{gifShowing:!0,gifSrc:window.location.origin+"/portfolio/src/gp.gif"}},methods:{gifClicked(){this.gifShowing=!this.gifShowing}}});var s=i(2807),c=i(3316),r=i(9150),g=i(124),d=i(6655),h=i(2665),f=i(8582),m=i.n(f);const p=(0,s.A)(l,[["render",o]]),u=p;m()(l,"components",{QCard:c.A,QToolbarTitle:r.A,QItem:g.A,QTooltip:d.A,QImg:h.A})}}]);