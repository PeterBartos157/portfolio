"use strict";(globalThis["webpackChunkpb_site"]=globalThis["webpackChunkpb_site"]||[]).push([[337],{337:(e,t,a)=>{a.r(t),a.d(t,{default:()=>b});var i=a(1758),n=a(9104);function r(e,t,a,r,l,o){const s=(0,i.g2)("q-toolbar-title"),c=(0,i.g2)("q-card"),d=(0,i.g2)("q-tooltip"),g=(0,i.g2)("q-item"),u=(0,i.g2)("q-img");return(0,i.uX)(),(0,i.Wv)(c,{class:"page q-pa-md article"},{default:(0,i.k6)((()=>[(0,i.bF)(s,{class:"text-h4 text-bold q-pa-lg text-secondary text-bold"},{default:(0,i.k6)((()=>[(0,i.eW)("Procedurally Generated Infinite Terrain")])),_:1}),(0,i.bF)(c,{class:"paragraph text-body1"},{default:(0,i.k6)((()=>[(0,i.eW)(" Procedurally Generated Infinite Terrain in Python using ModernGL and Perlin noise is a project aimed at creating vast and immersive virtual landscapes. Leveraging the power of ModernGL, developers can efficiently render detailed terrains with GPU acceleration, ensuring smooth and realistic visualizations. By incorporating Perlin noise algorithms, the project generates terrain features such as mountains, valleys, and plains dynamically. The use of Perlin noise ensures that generated terrains exhibit realistic patterns and variations, enhancing the overall visual appeal and immersion of the virtual landscapes. ")])),_:1}),(0,i.bF)(g,{clickable:"",tag:"a",target:"_blank",onClick:e.gifClicked,class:"button text-h6 text-info q-mt-lg"},{default:(0,i.k6)((()=>[(0,i.eW)(" Project Showcase "),e.gifShowing?((0,i.uX)(),(0,i.Wv)(d,{key:1},{default:(0,i.k6)((()=>[(0,i.eW)("click to hide")])),_:1})):((0,i.uX)(),(0,i.Wv)(d,{key:0},{default:(0,i.k6)((()=>[(0,i.eW)("click to view")])),_:1}))])),_:1},8,["onClick"]),(0,i.bF)(c,{class:"section"},{default:(0,i.k6)((()=>[(0,i.bo)((0,i.bF)(u,{class:"gif q-mt-lg q-pl-xl q-pr-xl",src:e.gifSrc,frameborder:"0"},null,8,["src"]),[[n.aG,e.gifShowing]])])),_:1})])),_:1})}const l=(0,i.pM)({name:"BP",components:{},data(){return{gifShowing:!0,gifSrc:window.location.origin+"/portfolio/src/pg.gif"}},methods:{gifClicked(){this.gifShowing=!this.gifShowing}}});var o=a(2807),s=a(3316),c=a(9150),d=a(124),g=a(6655),u=a(2665),f=a(8582),h=a.n(f);const p=(0,o.A)(l,[["render",r]]),b=p;h()(l,"components",{QCard:s.A,QToolbarTitle:c.A,QItem:d.A,QTooltip:g.A,QImg:u.A})}}]);